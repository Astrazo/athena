class a{constructor(){this.isActive=!1,this.currentText="",this.fullText="",this.currentIndex=0,this.speed=30,this.lineDelay=3e3,this.interval=null,this.onLineComplete=null,this.onLineSkip=null,this.isLastLineInSequence=!1,this.delayResolve=null,this.createDialogueElements()}createDialogueElements(){this.overlay=document.createElement("div"),this.overlay.className="dialogue-overlay",document.body.appendChild(this.overlay),this.container=document.createElement("div"),this.container.className="dialogue-container",this.container.innerHTML=`
            <div style="display: flex; gap: 10px; margin-bottom: 10px; position: relative; justify-content: flex-start;">
                <button id="skip" class="dialogue-skip" style="position: static;">Skip</button>
                <button id="skip-all" class="dialogue-skip" style="position: static;">Skip All</button>
            </div>
            <p class="dialogue-text"></p>
            <button class="dialogue-continue">Continue</button>
        `,document.body.appendChild(this.container),this.textElement=this.container.querySelector(".dialogue-text"),this.skipButton=this.container.querySelector("#skip"),this.skipAllButton=this.container.querySelector("#skip-all"),this.continueButton=this.container.querySelector(".dialogue-continue"),this.continueButton.addEventListener("click",e=>{e.stopPropagation(),this.onContinue?(this.onContinue(),this.hide()):this.hide()}),this.skipAllButton.addEventListener("click",e=>{e.stopPropagation(),this.skipAll()}),this.skipButton.addEventListener("click",e=>{e.stopPropagation(),this.isLineComplete?this.nextLine():this.lineSkip()}),this.overlay.addEventListener("click",()=>{this.isLineComplete?this.nextLine():this.lineSkip()}),this.container.addEventListener("click",()=>{this.isLineComplete?this.nextLine():this.lineSkip()})}async showSequence(e,t={}){this.sequenceController=new AbortController;const s=Array.isArray(e)?e:[e];for(let n=0;n<s.length;n++){const h=s[n],l=n===s.length-1;if(await new Promise((i,o)=>{if(this.sequenceController.signal.aborted){o(new Error("Cancelled"));return}this.show(h,{...t,isLastLineInSequence:l,onLineComplete:l&&t.onLineComplete||i,onLineSkip:l&&t.onLineSkip||i})}).catch(()=>Promise.reject(new Error("Cancelled"))),this.sequenceController.signal.aborted)break;if(!l)try{await new Promise((i,o)=>{this.delayResolve=i;const r=setTimeout(i,this.lineDelay);this.sequenceController.signal.addEventListener("abort",()=>{clearTimeout(r),o(new Error("Cancelled"))})})}catch(i){if(i.message==="Cancelled")break}}}show(e,t={}){this.isActive&&this.hide(!0),this.isActive=!0,this.isLineComplete=!1,this.fullText=e,this.currentText="",this.currentIndex=0,this.speed=t.speed||this.speed,this.isLastLineInSequence=t.isLastLineInSequence||!1,this.onLineComplete=t.onLineComplete||null,this.onContinue=t.onContinue||null,this.onLineSkip=t.onLineSkip||null,this.overlay.style.display="block",this.container.style.display="block",this.continueButton.style.display="none",this.type()}hide(e=!1){this.textElement.textContent="",this.currentText="",this.fullText="",this.textElement.style.setProperty("--cursor-visible","none"),this.interval&&(clearInterval(this.interval),this.interval=null),console.log("Dialogue cleared."),e||(this.isActive=!1,this.overlay.style.display="none",this.container.style.display="none",console.log("Dialogue box hidden."))}nextLine(){this.isLastLineInSequence?this.onContinue?(this.onContinue(),this.hide()):this.hide():this.delayResolve&&(this.delayResolve(),this.delayResolve=null)}type(){const e=()=>{this.isActive&&(this.currentIndex<this.fullText.length?(this.currentText+=this.fullText[this.currentIndex],this.textElement.textContent=this.currentText,this.currentIndex++,this.typingTimeout=setTimeout(e,this.speed)):this.lineComplete())};e()}lineComplete(){this.isLineComplete=!0,this.textElement.style.setProperty("--cursor-visible","inline-block"),this.isLastLineInSequence&&(console.log("Last dialogue line completed."),this.continueButton.style.display="block"),this.onLineComplete&&(console.log("Dialogue line completed."),this.onLineComplete())}lineSkip(){this.typingTimeout&&(clearTimeout(this.typingTimeout),this.typingTimeout=null),this.currentText=this.fullText,this.textElement.textContent=this.currentText,this.lineComplete(),this.onLineSkip&&this.onLineSkip(),console.log("Skip called.")}skipAll(){this.interval&&clearInterval(this.interval),this.sequenceController&&this.sequenceController.abort(),this.onLineComplete&&this.onLineComplete(),this.onLineSkip&&this.onLineSkip(),this.onContinue&&this.onContinue(),this.hide(),console.log("All dialogue skipped.")}showWithCharacter(e,t,s={}){const n=`${e}: ${t}`;this.show(n,s)}}window.typewriter=new a;
