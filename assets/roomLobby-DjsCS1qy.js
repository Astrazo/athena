import{d as C,u as S,f as b,r as E,l as x}from"./main-CaYjMSie.js";import{s as R}from"./objectives-DTNZ8ZM1.js";import{t as v}from"./toast-Ch3uAxuw.js";const d=localStorage.getItem("connectedRoomId"),m=localStorage.getItem("connectedUserId"),y=localStorage.getItem("connectedRoomName"),f=localStorage.getItem("connectedUsername"),i=JSON.parse(localStorage.getItem("localRoomData")||"{}");if(!d||!m||!y||!f||!i)throw console.error("Missing required data:",{roomId:d,userId:m,roomName:y,username:f,localRoomData:i}),window.location.href="index.html",new Error("Missing required data");function p(e){if(e){document.getElementById("roomName").textContent=`Room: ${e.roomName}`;const r=e.roomPlayers?Object.values(e.roomPlayers):[];document.getElementById("playerCount").textContent=`Players: ${r.length}/4`,document.getElementById("yourName").textContent=`You: ${f}`}}document.getElementById("lobbyHeader").textContent=y;const P=i.roomPlayers?Object.values(i.roomPlayers):[];document.getElementById("playerCount").textContent=`Players: ${P.length}/4`;function B(e){if(e){p(e),R("lobby");const r=e.roomPlayers?Object.values(e.roomPlayers):[];document.getElementById("playerCount").textContent=`Players: ${r.length}/4`;const u=document.getElementById("players");if(u.innerHTML="",e.roomPlayers){Object.entries(e.roomPlayers).sort((o,n)=>{const a=o[1].name.toLowerCase(),t=n[1].name.toLowerCase();return a.localeCompare(t)}).forEach(([o,n])=>{const a=document.createElement("li");o===m&&a.classList.add("current-player"),a.textContent=n.name;const t=document.createElement("div");t.className="status-container";const c=document.createElement("span");c.className="status-text",c.textContent=n.readyStatus===1?"Ready":"Not Ready",c.style.color=n.readyStatus===1?"#4CAF50":"#ff6b6b";const s=document.createElement("div");s.className="status-light",s.style.backgroundColor=n.readyStatus===1?"#4CAF50":"#ff6b6b",s.style.boxShadow=n.readyStatus===1?"0 0 8px #4CAF50":"0 0 8px #ff6b6b",t.appendChild(c),t.appendChild(s),a.appendChild(t),u.appendChild(a)});const I=r.length>=4&&r.every(o=>o.readyStatus===1);if(I&&!window.countdownStarted){window.countdownStarted=!0;let n=5,a=document.getElementById("countdown"),t=document.getElementById("countdownOverlay");t||(t=document.createElement("div"),t.id="countdownOverlay",t.className="countdown-overlay",t.innerHTML=`
                                <div class="countdown-box">
                                    <div class="countdown-title">Mission Starting</div>
                                    <div id="countdown" class="countdown-number" style="opacity:0;">0</div>
                                    <button id="cancelLaunchBtn" class="std-button" style="margin-top:32px;min-width:180px;">Cancel Launch</button>
                                </div>
                            `,document.body.appendChild(t),a=document.getElementById("countdown")),t.style.display="flex",a.style.display="block",a.textContent=`${n}`,a.style.opacity="1";const c=document.getElementById("cancelLaunchBtn");c&&(c.onclick=async()=>{window.countdownIntervalId&&(clearInterval(window.countdownIntervalId),window.countdownIntervalId=null),t.remove(),window.countdownStarted=!1;try{await S(m,d,"readyStatus",0),l.textContent="Ready Up",l.classList.remove("ready"),localStorage.setItem("readyStatus",0),v.warning("Launch cancelled. Waiting for all players to be ready.",{duration:5e3})}catch(h){console.error("Failed to update ready status after cancel:",h),v.error("Failed to cancel launch. Please try again.")}});const s=setInterval(()=>{n--,n<=0?(clearInterval(s),t&&t.remove(),localStorage.setItem("enablerComplete","false"),localStorage.setItem("enabledComplete","false"),console.log("Game has commenced."),window.location.href="story/role-select.html"):a.textContent=`${n}`},1e3);window.countdownIntervalId=s}else if(window.countdownStarted&&!I){window.countdownStarted=!1,window.countdownIntervalId&&(clearInterval(window.countdownIntervalId),window.countdownIntervalId=null);const o=document.getElementById("countdownOverlay");o&&o.remove()}}}}const w=C(d,e=>{e?(console.log(`Room ${e.roomId} updated:`),B(e),localStorage.setItem("localRoomData",JSON.stringify(e))):(console.error("Room not found"),window.location.href="index.html")});p({roomName:y,roomPlayers:i.roomPlayers});window.addEventListener("beforeunload",()=>{w&&w()});const l=document.getElementById("readyUp");l.addEventListener("click",async()=>{try{const e=l.textContent==="Ready Up"?1:0;await S(m,d,"readyStatus",e),l.textContent==="Ready Up"?(l.textContent="Not Ready",l.classList.add("ready")):(l.textContent="Ready Up",l.classList.remove("ready")),localStorage.setItem("readyStatus",e)}catch(e){console.error("Error updating ready status:",e),alert("Failed to update ready status. Please try again.")}});document.getElementById("leaveRoom").addEventListener("click",async()=>{try{const e=localStorage.getItem("connectedUserId"),r=localStorage.getItem("connectedRoomId"),u=localStorage.getItem("connectedUsername"),g=JSON.parse(localStorage.getItem("localRoomData"));if((g.roomPlayers?Object.values(g.roomPlayers):[]).length===1)if(confirm("You are the last player in this room. Would you like to delete the room?"))await b(r),console.log(`Room ${r} deleted successfully.`);else return;await E(e,u,"None",r),localStorage.removeItem("connectedRoomId"),localStorage.removeItem("connectedUserId"),localStorage.removeItem("connectedRoomName"),localStorage.removeItem("connectedUsername"),localStorage.removeItem("readyStatus"),localStorage.removeItem("roomData"),w&&w(),document.getElementById("loadingContainer").style.display="flex";try{const o=await x(void 0,void 0,0);localStorage.setItem("availableRooms",JSON.stringify(o)),window.location.href="room-select.html"}catch(o){console.error("Error loading rooms:",o),localStorage.removeItem("availableRooms")}}catch(e){console.error("Error leaving room:",e),alert("Failed to leave room. Please try again.")}});
